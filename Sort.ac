extern def void print(int i);
extern def void read(int i);

def void merge(int A[], int low, int mid, int high) {
    int C[10000];       
    int i := low;     
    int j := mid + 1; 
    int k := 0;       
    while (i <= mid and j <= high) { 
        if (A[i] <= A[j]) {  
            C[k] := A[i];
            i+=1;
            k+=1;
        } else {          
            C[k] := A[j];
            j+=1;
            k+=1;
        }
    }

    while (i <= mid) { 
        C[k] := A[i];
        i+=1;
        k+=1;
    }

    while (j <= high) { 
        C[k] := A[j];
        j+=1;
        k+=1;
    }

    for (int k := low; k <= high; k+=1) {
        A[k] := C[k - low];
    }
}

def void mergesort(int[] array, int low, int high) {
    if (low >= high){
	 ret;
    }
    int mid := (low + high) / 2;
    mergesort(array, low, mid);
    mergesort(array, mid + 1, high);
    merge(array, low, mid, high);
}

def void main() {
    int n;
    read(n);
    int[n] A;
    
    for (int i := 0; i < n; i+=1) {
	read(A[i]);
    }

    mergesort(A, 0, n - 1);
    for (int i := 0; i < n; i+=1) {
	print(A[i]);
    }
}
